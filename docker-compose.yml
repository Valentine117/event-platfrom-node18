version: "3.8"

services:
  mongodb:
    image: mongo:7
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment: [ MONGO_INITDB_DATABASE=event-reward-platform-dev ]
    networks:
      - app_net


  gateway:
    build:
      context: .
      dockerfile: ./apps/gateway/Dockerfile
    container_name: gateway
    ports:
      - "3000:3000"
    volumes:
      - ./ssl:/app/ssl  # üëà Î°úÏª¨ Ïù∏Ï¶ùÏÑúÎ•º Ïª®ÌÖåÏù¥ÎÑàÏóê ÎßàÏö¥Ìä∏
    environment:
      PORT: 3000
      JWT_SECRET: my_jwt_secret
      AUTH_SERVICE_URL: http://auth:3001
      EVENT_SERVICE_URL: http://event:3002
      MONGO_URI: mongodb://mongodb:27017/event-reward-platform-dev
    depends_on:
      - mongodb
      - auth
      - event
    networks:
      app_net:
        ipv4_address: 172.19.0.100 # ÌôîÏù¥Ìä∏ Î¶¨Ïä§Ìä∏ Í¥ÄÎ¶¨Î•º ÏúÑÌïú gateway ip Í≥†Ï†ï

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
    container_name: auth
    ports:
      - "3001:3001"
    environment:
      PORT: 3001
      JWT_SECRET: my_jwt_secret
      MONGO_URI: mongodb://mongodb:27017/event-reward-platform-dev
      GATEWAY_SERVICE_URL: https://gateway:3000
    depends_on:
      - mongodb
    networks:
      - app_net

  event:
    build:
      context: .
      dockerfile: ./apps/event/Dockerfile
    container_name: event
    ports:
      - "3002:3002"
    environment:
      PORT: 3002
      JWT_SECRET: my_jwt_secret
      MONGO_URI: mongodb://mongodb:27017/event-reward-platform-dev
      GATEWAY_SERVICE_URL: https://gateway:3000
    depends_on:
      - mongodb
    networks:
      - app_net

volumes:
  mongo-data:

networks:
  app_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/16
